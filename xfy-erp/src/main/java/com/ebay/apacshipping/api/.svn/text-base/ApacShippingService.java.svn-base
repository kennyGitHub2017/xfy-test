package com.ebay.apacshipping.api;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * Version 4.0.0
 *
 * This class was generated by Apache CXF 3.0.4
 * 2015-04-21T09:24:23.489+08:00
 * Generated source version: 3.0.4
 * 
 */
@WebServiceClient(name = "ApacShippingService", 
                  wsdlLocation = "https://api.apacshipping.ebay.com.hk/aspapi/v4/ApacShippingService?wsdl",
                  targetNamespace = "http://api.apacshipping.ebay.com/") 
public class ApacShippingService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://api.apacshipping.ebay.com/", "ApacShippingService");
    public final static QName ApacShippingServiceSoap12 = new QName("http://api.apacshipping.ebay.com/", "ApacShippingServiceSoap12");
    public final static QName ApacShippingServiceSandboxSoap12 = new QName("http://api.apacshipping.ebay.com/", "ApacShippingServiceSandboxSoap12");
    public final static QName ApacShippingServiceSoap = new QName("http://api.apacshipping.ebay.com/", "ApacShippingServiceSoap");
    public final static QName ApacShippingServiceLocal = new QName("http://api.apacshipping.ebay.com/", "ApacShippingServiceLocal");
    public final static QName ApacShippingServiceSandboxSoap = new QName("http://api.apacshipping.ebay.com/", "ApacShippingServiceSandboxSoap");
    static {
        URL url = null;
        try {
            url = new URL("https://api.apacshipping.ebay.com.hk/aspapi/v4/ApacShippingService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ApacShippingService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "https://api.apacshipping.ebay.com.hk/aspapi/v4/ApacShippingService?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ApacShippingService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ApacShippingService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ApacShippingService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ApacShippingService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ApacShippingService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ApacShippingService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    

    /**
     *
     * @return
     *     returns ApacShippingServiceSoap
     */
    @WebEndpoint(name = "ApacShippingServiceSoap12")
    public ApacShippingServiceSoap getApacShippingServiceSoap12() {
        return super.getPort(ApacShippingServiceSoap12, ApacShippingServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ApacShippingServiceSoap
     */
    @WebEndpoint(name = "ApacShippingServiceSoap12")
    public ApacShippingServiceSoap getApacShippingServiceSoap12(WebServiceFeature... features) {
        return super.getPort(ApacShippingServiceSoap12, ApacShippingServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns ApacShippingServiceSoap
     */
    @WebEndpoint(name = "ApacShippingServiceSandboxSoap12")
    public ApacShippingServiceSoap getApacShippingServiceSandboxSoap12() {
        return super.getPort(ApacShippingServiceSandboxSoap12, ApacShippingServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ApacShippingServiceSoap
     */
    @WebEndpoint(name = "ApacShippingServiceSandboxSoap12")
    public ApacShippingServiceSoap getApacShippingServiceSandboxSoap12(WebServiceFeature... features) {
        return super.getPort(ApacShippingServiceSandboxSoap12, ApacShippingServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns ApacShippingServiceSoap
     */
    @WebEndpoint(name = "ApacShippingServiceSoap")
    public ApacShippingServiceSoap getApacShippingServiceSoap() {
        return super.getPort(ApacShippingServiceSoap, ApacShippingServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ApacShippingServiceSoap
     */
    @WebEndpoint(name = "ApacShippingServiceSoap")
    public ApacShippingServiceSoap getApacShippingServiceSoap(WebServiceFeature... features) {
        return super.getPort(ApacShippingServiceSoap, ApacShippingServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns ApacShippingServiceSoap
     */
    @WebEndpoint(name = "ApacShippingServiceLocal")
    public ApacShippingServiceSoap getApacShippingServiceLocal() {
        return super.getPort(ApacShippingServiceLocal, ApacShippingServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ApacShippingServiceSoap
     */
    @WebEndpoint(name = "ApacShippingServiceLocal")
    public ApacShippingServiceSoap getApacShippingServiceLocal(WebServiceFeature... features) {
        return super.getPort(ApacShippingServiceLocal, ApacShippingServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns ApacShippingServiceSoap
     */
    @WebEndpoint(name = "ApacShippingServiceSandboxSoap")
    public ApacShippingServiceSoap getApacShippingServiceSandboxSoap() {
        return super.getPort(ApacShippingServiceSandboxSoap, ApacShippingServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ApacShippingServiceSoap
     */
    @WebEndpoint(name = "ApacShippingServiceSandboxSoap")
    public ApacShippingServiceSoap getApacShippingServiceSandboxSoap(WebServiceFeature... features) {
        return super.getPort(ApacShippingServiceSandboxSoap, ApacShippingServiceSoap.class, features);
    }

}
